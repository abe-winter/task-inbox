"""initial

Revision ID: 5be5733253a9
Revises: 
Create Date: 2022-12-24 11:41:47.703220

"""
from alembic import op
import sqlalchemy as sa, sqlmodel


# revision identifiers, used by Alembic.
revision = '5be5733253a9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('taskschema',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('apikey',
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tschema_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('permissions', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tschema_id'], ['taskschema.name'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('schemaversion',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('tschema_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('semver', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('default_hook_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hook_auth', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tschema_id'], ['taskschema.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tschema_id', 'semver'),
    sa.UniqueConstraint('tschema_id', 'version')
    )
    op.create_table('webhookkey',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('tschema_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tschema_id'], ['taskschema.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tschema_id', 'key')
    )
    op.create_table('tasktype',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('version_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pending_states', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resolved_states', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['version_id'], ['schemaversion.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_id', 'name')
    )
    op.create_table('task',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('ttype_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ttype_id'], ['tasktype.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taskhistory',
    sa.Column('update_meta', sa.JSON(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('task_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('editor_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('assigned_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['editor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('taskhistory')
    op.drop_table('task')
    op.drop_table('tasktype')
    op.drop_table('webhookkey')
    op.drop_table('schemaversion')
    op.drop_table('apikey')
    op.drop_table('user')
    op.drop_table('taskschema')
    # ### end Alembic commands ###
