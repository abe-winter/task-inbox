"""initial

Revision ID: 84367b3f1261
Revises: 
Create Date: 2022-12-29 19:27:02.535295

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '84367b3f1261'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ab_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_register_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('registration_hash', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ab_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('fail_login_count', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('changed_on', sa.DateTime(), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ab_view_menu',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('task_schema',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_permission_view',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('view_menu_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['ab_permission.id'], ),
    sa.ForeignKeyConstraint(['view_menu_id'], ['ab_view_menu.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission_id', 'view_menu_id')
    )
    op.create_table('ab_user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id')
    )
    op.create_table('api_key',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('key', postgresql.BYTEA(), nullable=False),
    sa.Column('tschema_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tschema_id'], ['task_schema.id'], ),
    sa.PrimaryKeyConstraint('id', 'key')
    )
    op.create_table('schema_version',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('tschema_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('semver', sa.String(), nullable=True),
    sa.Column('default_hook_url', sa.String(), nullable=True),
    sa.Column('hook_auth', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tschema_id'], ['task_schema.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tschema_id', 'semver'),
    sa.UniqueConstraint('tschema_id', 'version')
    )
    op.create_table('webhook_key',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('tschema_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tschema_id'], ['task_schema.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tschema_id', 'key')
    )
    op.create_table('ab_permission_view_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission_view_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_view_id'], ['ab_permission_view.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission_view_id', 'role_id')
    )
    op.create_table('task_type',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('version_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('pending_states', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('resolved_states', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['schema_version.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_id', 'name')
    )
    op.create_table('task',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('ttype_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['ttype_id'], ['task_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_history',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('editor_id', sa.Integer(), nullable=True),
    sa.Column('assigned_id', sa.Integer(), nullable=True),
    sa.Column('update_meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['assigned_id'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['editor_id'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_history')
    op.drop_table('task')
    op.drop_table('task_type')
    op.drop_table('ab_permission_view_role')
    op.drop_table('webhook_key')
    op.drop_table('schema_version')
    op.drop_table('api_key')
    op.drop_table('ab_user_role')
    op.drop_table('ab_permission_view')
    op.drop_table('task_schema')
    op.drop_table('ab_view_menu')
    op.drop_table('ab_user')
    op.drop_table('ab_role')
    op.drop_table('ab_register_user')
    op.drop_table('ab_permission')
    # ### end Alembic commands ###
